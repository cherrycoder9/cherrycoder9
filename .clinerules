# Project Rules

## 📁 디렉터리 개요
- /README.md
  # TL;DR, 프로젝트 목표·범위·주요 용어 5줄 요약
- /.handbook/              # 상세 레퍼런스 전용

## ⬇️ 문서 우선순위 & 역할 (참고)
### 1. 핵심 (모든 프로젝트)
- .handbook/architecture.md
  # C4 다이어그램, 폴더·네이밍 규칙, 데이터 흐름

### 2. 권장 (중·대형)
- .handbook/stack.md
  # 언어·런타임·프레임워크 선정 이유·버전
- .handbook/dev-guidelines.md
  # 코드 스타일, 브랜치·PR·커밋 가이드라인
- .handbook/api-contract.yaml
  # OpenAPI / GraphQL 스펙 – 엔드포인트·스키마·에러 모델
- .handbook/data-model.md
  # DB ERD·인덱스·제약·마이그레이션 규칙
- .handbook/api-optimization.md
  # API 호출 최적화 및 비용 절감 가이드라인

### 3. 확장 (대형·프로덕션)
- .handbook/quality.md
  # 테스트 전략, SLO·보안·로깅·모니터링 목표
- .handbook/ci-cd.md
  # 빌드→테스트→배포→롤백 파이프라인
- .handbook/env.example
  # 필수 환경변수 샘플
- .handbook/secrets.md
  # 키 관리·회전·GDPR·CCPA 체크
- .handbook/adr/000x-*.md
  # Architecture Decision Record: 문제·대안·결정·근거
- .handbook/ai-collab.md
  # AI 프롬프트 형식·금지어·출력 포맷·override 규칙

## 🧑‍💻 작업 가이드라인
1. **파일 존재 여부 먼저 확인** → 있으면 참고, 없으면 기본 관습 적용을 고려합니다.
2. **아키텍처에 영향을 미치는 중요한 결정 또는 기술/의존성 도입 시** ⇒ `.handbook/adr/`에 ADR 템플릿 추가를 제안합니다. (예: 새 프레임워크 도입, 핵심 데이터 모델 변경 등)
3. **필요 문서가 없을 때**  
   - *단순* : README 또는 관련 파일에 간단 설명 추가를 제안합니다.  
   - *스펙* : 최소 스켈레톤(예: OpenAPI 3.1) 생성을 고려합니다.
4. **커밋 메시지** ⇒ Gitmoji 스타일을 권장합니다 (`.handbook/dev-guidelines.md` 참고).
5. **PR 병합 조건** ⇒ `.handbook/quality.md`의 테스트 커버리지·SLO 목표 충족 시 병합을 고려합니다.

## 🤖 응답 포맷 가이드라인
- 기본 : 코드 먼저, 설명 ≤3줄
- 정보 부족 : “Clarify needed: …” 짧게 질문
- 금지 : `any` 타입, `console.log`, 미승인 라이브러리
- 코드 스타일: 레거시 코드는 LLM 재량으로 모던 스타일로 변경 가능

## 🏷 셀프체크
- [ ] 수정/추가 파일 실제 존재?
- [ ] .handbook/stack.md 버전·라이브러리 준수? (없으면 README 참고)
- [ ] quality.md 있을 때만 테스트·SLO 강제
- [ ] 아키텍처에 중요한 변경/기술 도입 시 ADR 작성?

# 끝
